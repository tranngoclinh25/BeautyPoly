// <auto-generated />
using System;
using BeautyPoly.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeautyPoly.Data.Migrations
{
    [DbContext(typeof(BeautyPolyDbContext))]
    [Migration("20240117222440_updateOrder")]
    partial class updateOrder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BeautyPoly.Data.Models.Categories", b =>
                {
                    b.Property<int>("CateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateID"), 1L, 1);

                    b.Property<string>("CateCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CateName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.HasKey("CateID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BeautyPoly.Data.Models.SaleItems", b =>
                {
                    b.Property<int>("SaleItemsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleItemsID"), 1L, 1);

                    b.Property<bool?>("IsSelect")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductSkusID")
                        .HasColumnType("int");

                    b.Property<int?>("SaleID")
                        .HasColumnType("int");

                    b.HasKey("SaleItemsID");

                    b.HasIndex("ProductSkusID");

                    b.HasIndex("SaleID");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("BeautyPoly.Models.Accounts", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"), 1L, 1);

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("AccountID");

                    b.HasIndex("RoleID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BeautyPoly.Models.Cart", b =>
                {
                    b.Property<int>("PotentialCustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("TotalMoney")
                        .HasColumnType("float");

                    b.HasKey("PotentialCustomerID");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("BeautyPoly.Models.CartDetails", b =>
                {
                    b.Property<int>("CartDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartDetailsID"), 1L, 1);

                    b.Property<int?>("CartID")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductSkusID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("CartDetailsID");

                    b.HasIndex("CartID");

                    b.HasIndex("ProductSkusID");

                    b.ToTable("CartDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.Coupon", b =>
                {
                    b.Property<int>("CouponID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponID"), 1L, 1);

                    b.Property<string>("CouponCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CouponName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CouponType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DiscountValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CouponID");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("BeautyPoly.Models.LocationCustomer", b =>
                {
                    b.Property<int>("LocationCustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationCustomerID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("PotentialCustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("int");

                    b.Property<string>("WardID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationCustomerID");

                    b.HasIndex("PotentialCustomerID");

                    b.ToTable("LocationCustomers");
                });

            modelBuilder.Entity("BeautyPoly.Models.Option", b =>
                {
                    b.Property<int>("OptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionID"), 1L, 1);

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<string>("OptionCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OptionName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OptionID");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("BeautyPoly.Models.OptionDetails", b =>
                {
                    b.Property<int>("OptionDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionDetailsID"), 1L, 1);

                    b.Property<int?>("OptionID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("OptionDetailsID");

                    b.HasIndex("OptionID");

                    b.HasIndex("ProductID");

                    b.ToTable("OptionDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.OptionValue", b =>
                {
                    b.Property<int>("OptionValueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionValueID"), 1L, 1);

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<int?>("OptionID")
                        .HasColumnType("int");

                    b.Property<string>("OptionValueCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OptionValueName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OptionValueID");

                    b.HasIndex("OptionID");

                    b.ToTable("OptionValues");
                });

            modelBuilder.Entity("BeautyPoly.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"), 1L, 1);

                    b.Property<int?>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("CouponID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MedthodPayment")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PotentialCustomerID")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ReceiveCustomerMoney")
                        .HasColumnType("float");

                    b.Property<double?>("ReturnCustomerMoney")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShipPrice")
                        .HasColumnType("int");

                    b.Property<double?>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<int?>("TransactStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("AccountID");

                    b.HasIndex("CouponID");

                    b.HasIndex("PotentialCustomerID");

                    b.HasIndex("TransactStatusID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BeautyPoly.Models.OrderDetails", b =>
                {
                    b.Property<int>("OrderDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailsID"), 1L, 1);

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("PriceNew")
                        .HasColumnType("int");

                    b.Property<int>("ProductSkusID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("TotalMoney")
                        .HasColumnType("float");

                    b.HasKey("OrderDetailsID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductSkusID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.Posts", b =>
                {
                    b.Property<int>("PostsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostsID"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHot")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNewFeed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("PostsCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortContents")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PostsID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BeautyPoly.Models.PotentialCustomer", b =>
                {
                    b.Property<int>("PotentialCustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PotentialCustomerID"), 1L, 1);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PotentialCustomerCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResetPasswordcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PotentialCustomerID");

                    b.ToTable("PotentialCustomers");
                });

            modelBuilder.Entity("BeautyPoly.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<int?>("CateID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CateID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BeautyPoly.Models.ProductDetails", b =>
                {
                    b.Property<int>("ProductDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductDetailsID"), 1L, 1);

                    b.Property<int?>("OptionDetailsID")
                        .HasColumnType("int");

                    b.Property<int?>("OptionValueID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductSkusID")
                        .HasColumnType("int");

                    b.HasKey("ProductDetailsID");

                    b.HasIndex("OptionDetailsID");

                    b.HasIndex("OptionValueID");

                    b.HasIndex("ProductSkusID");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.ProductSkus", b =>
                {
                    b.Property<int>("ProductSkusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSkusID"), 1L, 1);

                    b.Property<double?>("CapitalPrice")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("ProductVariantCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductVariantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductSkusID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductSkus");
                });

            modelBuilder.Entity("BeautyPoly.Models.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BeautyPoly.Models.Sale", b =>
                {
                    b.Property<int>("SaleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleID"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DiscountValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SaleCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SaleName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SaleType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SaleID");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("BeautyPoly.Models.TransactStatus", b =>
                {
                    b.Property<int>("TransactStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactStatusID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactStatusID");

                    b.ToTable("TransactStatuses");
                });

            modelBuilder.Entity("BeautyPoly.Models.VoucherDetails", b =>
                {
                    b.Property<int>("VoucherDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoucherDetailsID"), 1L, 1);

                    b.Property<int?>("PotentialCustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherID")
                        .HasColumnType("int");

                    b.HasKey("VoucherDetailsID");

                    b.HasIndex("PotentialCustomerID");

                    b.HasIndex("VoucherID");

                    b.ToTable("VoucherDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.Vouchers", b =>
                {
                    b.Property<int>("VoucherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoucherID"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DiscountValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxValue")
                        .HasColumnType("int");

                    b.Property<int?>("MinValue")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UseQuantity")
                        .HasColumnType("int");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoucherName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("VoucherID");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("BeautyPoly.Data.Models.SaleItems", b =>
                {
                    b.HasOne("BeautyPoly.Models.ProductSkus", "ProductSkus")
                        .WithMany("SaleItems")
                        .HasForeignKey("ProductSkusID");

                    b.HasOne("BeautyPoly.Models.Sale", "Sale")
                        .WithMany("SaleItems")
                        .HasForeignKey("SaleID");

                    b.Navigation("ProductSkus");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("BeautyPoly.Models.Accounts", b =>
                {
                    b.HasOne("BeautyPoly.Models.Roles", "Roles")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleID");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("BeautyPoly.Models.Cart", b =>
                {
                    b.HasOne("BeautyPoly.Models.PotentialCustomer", "PotentialCustomer")
                        .WithOne("Cart")
                        .HasForeignKey("BeautyPoly.Models.Cart", "PotentialCustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PotentialCustomer");
                });

            modelBuilder.Entity("BeautyPoly.Models.CartDetails", b =>
                {
                    b.HasOne("BeautyPoly.Models.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartID");

                    b.HasOne("BeautyPoly.Models.ProductSkus", "ProductSkus")
                        .WithMany("CartDetails")
                        .HasForeignKey("ProductSkusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductSkus");
                });

            modelBuilder.Entity("BeautyPoly.Models.LocationCustomer", b =>
                {
                    b.HasOne("BeautyPoly.Models.PotentialCustomer", "PotentialCustomer")
                        .WithMany("LocationCustomers")
                        .HasForeignKey("PotentialCustomerID");

                    b.Navigation("PotentialCustomer");
                });

            modelBuilder.Entity("BeautyPoly.Models.OptionDetails", b =>
                {
                    b.HasOne("BeautyPoly.Models.Option", "Option")
                        .WithMany("OptionDetails")
                        .HasForeignKey("OptionID");

                    b.HasOne("BeautyPoly.Models.Product", "Product")
                        .WithMany("OptionDetails")
                        .HasForeignKey("ProductID");

                    b.Navigation("Option");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeautyPoly.Models.OptionValue", b =>
                {
                    b.HasOne("BeautyPoly.Models.Option", "Option")
                        .WithMany("OptionValues")
                        .HasForeignKey("OptionID");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("BeautyPoly.Models.Order", b =>
                {
                    b.HasOne("BeautyPoly.Models.Accounts", "Accounts")
                        .WithMany("Orders")
                        .HasForeignKey("AccountID");

                    b.HasOne("BeautyPoly.Models.Coupon", "Coupon")
                        .WithMany("Orders")
                        .HasForeignKey("CouponID");

                    b.HasOne("BeautyPoly.Models.PotentialCustomer", "PotentialCustomer")
                        .WithMany("Orders")
                        .HasForeignKey("PotentialCustomerID");

                    b.HasOne("BeautyPoly.Models.TransactStatus", "TransactStatus")
                        .WithMany("Orders")
                        .HasForeignKey("TransactStatusID");

                    b.Navigation("Accounts");

                    b.Navigation("Coupon");

                    b.Navigation("PotentialCustomer");

                    b.Navigation("TransactStatus");
                });

            modelBuilder.Entity("BeautyPoly.Models.OrderDetails", b =>
                {
                    b.HasOne("BeautyPoly.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID");

                    b.HasOne("BeautyPoly.Models.ProductSkus", "ProductSkus")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductSkusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductSkus");
                });

            modelBuilder.Entity("BeautyPoly.Models.Product", b =>
                {
                    b.HasOne("BeautyPoly.Data.Models.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CateID");

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("BeautyPoly.Models.ProductDetails", b =>
                {
                    b.HasOne("BeautyPoly.Models.OptionDetails", "OptionDetails")
                        .WithMany("ProductDetails")
                        .HasForeignKey("OptionDetailsID");

                    b.HasOne("BeautyPoly.Models.OptionValue", "OptionValue")
                        .WithMany("ProductDetails")
                        .HasForeignKey("OptionValueID");

                    b.HasOne("BeautyPoly.Models.ProductSkus", "ProductSkus")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductSkusID");

                    b.Navigation("OptionDetails");

                    b.Navigation("OptionValue");

                    b.Navigation("ProductSkus");
                });

            modelBuilder.Entity("BeautyPoly.Models.ProductSkus", b =>
                {
                    b.HasOne("BeautyPoly.Models.Product", "Product")
                        .WithMany("ProductSkus")
                        .HasForeignKey("ProductID");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeautyPoly.Models.VoucherDetails", b =>
                {
                    b.HasOne("BeautyPoly.Models.PotentialCustomer", "PotentialCustomer")
                        .WithMany("VoucherDetails")
                        .HasForeignKey("PotentialCustomerID");

                    b.HasOne("BeautyPoly.Models.Vouchers", "Vouchers")
                        .WithMany("VoucherDetails")
                        .HasForeignKey("VoucherID");

                    b.Navigation("PotentialCustomer");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("BeautyPoly.Data.Models.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BeautyPoly.Models.Accounts", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeautyPoly.Models.Cart", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.Coupon", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeautyPoly.Models.Option", b =>
                {
                    b.Navigation("OptionDetails");

                    b.Navigation("OptionValues");
                });

            modelBuilder.Entity("BeautyPoly.Models.OptionDetails", b =>
                {
                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.OptionValue", b =>
                {
                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.PotentialCustomer", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("LocationCustomers");

                    b.Navigation("Orders");

                    b.Navigation("VoucherDetails");
                });

            modelBuilder.Entity("BeautyPoly.Models.Product", b =>
                {
                    b.Navigation("OptionDetails");

                    b.Navigation("ProductSkus");
                });

            modelBuilder.Entity("BeautyPoly.Models.ProductSkus", b =>
                {
                    b.Navigation("CartDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductDetails");

                    b.Navigation("SaleItems");
                });

            modelBuilder.Entity("BeautyPoly.Models.Roles", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BeautyPoly.Models.Sale", b =>
                {
                    b.Navigation("SaleItems");
                });

            modelBuilder.Entity("BeautyPoly.Models.TransactStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeautyPoly.Models.Vouchers", b =>
                {
                    b.Navigation("VoucherDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
